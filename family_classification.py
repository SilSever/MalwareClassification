"""
Silvio Severino - family classification
"""
import main
from sklearn.svm import SVC
from sklearn import linear_model
from sklearn.ensemble import RandomForestClassifier
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.model_selection import GridSearchCV
from sklearn.metrics import classification_report
from prettytable import PrettyTable


print ("Reading data ...")
x_all, y_all = main.read_multiclass(load_data=False)
x_train, x_test, y_train, y_test = train_test_split(x_all, y_all, test_size=0.3, random_state=42)

modelLogistic = [
    linear_model.LogisticRegression()
]
for model in modelLogistic:
    model.fit(x_train, y_train)
    y_pred = model.predict(x_test)
    accuLog = accuracy_score(y_test, y_pred)

modelSvm = [SVC(),
          SVC(C=1000, cache_size=200, class_weight=None, coef0=0.0,
              decision_function_shape='ovr', degree=3, gamma=0.01, kernel='rbf',
              max_iter=-1, probability=False, random_state=None, shrinking=True,
              tol=0.001, verbose=False)
          ]
for model in modelSvm:
    model.fit(x_train, y_train)
    y_pred = model.predict(x_test)
    accuSvm = accuracy_score(y_test, y_pred)

modelRf = [RandomForestClassifier(),
          RandomForestClassifier(bootstrap=True, class_weight=None, criterion='gini',
                                 max_depth=None, max_features='log2', max_leaf_nodes=None,
                                 min_impurity_decrease=0.0, min_impurity_split=None,
                                 min_samples_leaf=1, min_samples_split=2,
                                 min_weight_fraction_leaf=0.0, n_estimators=1000, n_jobs=1,
                                 oob_score=False, random_state=None, verbose=0,
                                 warm_start=False)

          ]
for model in modelRf:
    model.fit(x_train, y_train)
    y_pred = model.predict(x_test)
    accuRf = accuracy_score(y_test, y_pred)

#Show the result
table = PrettyTable()
print("Malware family classification")
table.field_names = ["Algorithms", "Accuracy"]
table.add_row(["Logistic regression", accuLog])
table.add_row(["Support vector machine", accuSvm])
table.add_row(["Random forest", accuRf])
print(table)