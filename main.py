import numpy as np
import sys
from os import listdir
from os.path import isfile, join


FEATURES_SET = {
    "feature": 1,
    "permission": 2,
    "activity": 3,
    "service_receiver": 3,
    "provider": 3,
    "service": 3,
    "intent": 4,
    "api_call": 5,
    "real_permission": 6,
    "call": 7,
    "url": 8
}

def count_feature_set(lines):
    features_map = {x: 0 for x in range(1, 9)}
    for l in lines:
        if l != "\n":
            set = l.split("::")[0]
            features_map[FEATURES_SET[set]] += 1
    features = []
    for i in range(1, 9):
        features.append(features_map[i])
    return features

def read(LOAD_DATA=False):
    if LOAD_DATA:
        mypath = "drebin/feature_vectors"
        onlyfiles = [f for f in listdir(mypath) if isfile(join(mypath, f))]

        ground_truth = np.loadtxt("drebin/sha256_family.csv", delimiter=",", skiprows=1, dtype=str)

        pos = []
        neg = []
        for virus in onlyfiles:
            if virus in ground_truth[:, 0]:
                pos.append(virus)
            else:
                if len(neg) < 5560:
                    neg.append(virus)

        x = []
        y = []
        for text_file in pos:
            sys.stdin = open("%s/%s" % (mypath, text_file))
            features = sys.stdin.readlines()
            sample = count_feature_set(features)
            x.append(sample)
            y.append(1)

        for text_file in neg:
            sys.stdin = open("%s/%s" % (mypath, text_file))
            features = sys.stdin.readlines()
            sample = count_feature_set(features)
            x.append(sample)
            y.append(0)

        x = np.array(x)
        y = np.array(y)

        np.save("data_numpy/x_all.npy", x)
        np.save("data_numpy/y_all.npy", y)

        return x, y
    else:
        x_ = np.load("data_numpy/x_all.npy")
        y_ = np.load("data_numpy/y_all.npy")
        return x_, y_


def read_multiclass(load_data=False):
    if load_data:
        mypath = "drebin/feature_vectors"
        onlyfiles = [f for f in listdir(mypath) if isfile(join(mypath, f))]

        ground_truth = np.loadtxt("drebin/sha256_family.csv", delimiter=",", skiprows=1, dtype=str)
        families = np.unique(ground_truth[:, 1])
        classes = map_family_to_category(families)

        pos = []
        for virus in onlyfiles:
            if virus in ground_truth[:, 0]:
                pos.append(virus)

        x = []
        y = []
        for i in range(ground_truth.shape[0]):
            sys.stdin = open("%s/%s" % (mypath, ground_truth[i, 0]))
            features = sys.stdin.readlines()
            sample = count_feature_set(features)
            x.append(sample)
            y.append(classes[ground_truth[i, 1]])

        x = np.array(x)
        y = np.array(y)

        np.save("data_numpy/x_multi_all.npy", x)
        np.save("data_numpy/y_multi_all.npy", y)

        return x, y
    else:
        x_ = np.load("data_numpy/x_multi_all.npy")
        y_ = np.load("data_numpy/y_multi_all.npy")

        return x_, y_


def map_family_to_category(families):
    out = {}
    count = 1
    for family in families:
        out[family] = count
        count += 1
    return out


if __name__ == "__main__":
    read(LOAD_DATA=True)